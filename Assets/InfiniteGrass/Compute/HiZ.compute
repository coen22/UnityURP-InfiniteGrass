#pragma kernel InitDepth
#pragma kernel Downsample

Texture2D<float> _CameraDepthTexture;
Texture2D<float> _HiZTexture;
RWTexture2D<float> _HiZWrite;

int _MipLevel;
int2 _Size;

[numthreads(8,8,1)]
void InitDepth(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _Size.x || id.y >= _Size.y) return;
    float d = _CameraDepthTexture.Load(int3(id.xy, 0));
    _HiZWrite[id.xy] = d;
}

[numthreads(8,8,1)]
void Downsample(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _Size.x || id.y >= _Size.y) return;
    int2 src = int2(id.xy) * 2;
    float d0 = _HiZTexture.Load(int3(src, _MipLevel-1));
    float d1 = _HiZTexture.Load(int3(src + int2(1,0), _MipLevel-1));
    float d2 = _HiZTexture.Load(int3(src + int2(0,1), _MipLevel-1));
    float d3 = _HiZTexture.Load(int3(src + int2(1,1), _MipLevel-1));
#if defined(UNITY_REVERSED_Z)
    float m = max(max(d0, d1), max(d2, d3));
#else
    float m = min(min(d0, d1), min(d2, d3));
#endif
    _HiZWrite[id.xy] = m;
}
